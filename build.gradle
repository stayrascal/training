buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.5.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar {
    baseName = 'training-spring-boot-service'
    version = '0.1.0'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

task wrapper(type: Wrapper) {
    gradleVersion = '2.11'
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-security")

    compile("org.springframework:spring-context-support")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-joda")

    compile("joda-time:joda-time")
    compile("org.jadira.usertype:usertype.extended:4.0.0.GA")

    compile("io.springfox:springfox-swagger2:2.3.0")
    compile("io.springfox:springfox-swagger-ui:2.3.0")

    compile("com.github.fge:json-schema-validator:2.2.6")

    runtime("postgresql:postgresql:9.1-901.jdbc4")
    runtime("org.hsqldb:hsqldb")
    runtime("mysql:mysql-connector-java")


    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("com.jayway.jsonpath:json-path")
    testCompile("com.jayway.jsonpath:json-path-assert")
    testCompile("junit:junit")
}

sourceSets {
    main {
        java.srcDirs = ['src/main/java/com/thoughtworks']
        resources.srcDirs = ['src/main/resources']
    }
    test {
        java.srcDirs = ['src/test/java/com/thoughtworks']
        resources.srcDirs = ['src/test/resources']
    }
}

task createDirs << {
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}
